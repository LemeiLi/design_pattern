
a.out:     file format elf32-littlearm
a.out
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0001044d

Program Header:
0x70000001 off    0x00000d30 vaddr 0x00010d30 paddr 0x00010d30 align 2**2
         filesz 0x00000008 memsz 0x00000008 flags r--
    PHDR off    0x00000034 vaddr 0x00010034 paddr 0x00010034 align 2**2
         filesz 0x00000120 memsz 0x00000120 flags r-x
  INTERP off    0x00000154 vaddr 0x00010154 paddr 0x00010154 align 2**0
         filesz 0x00000019 memsz 0x00000019 flags r--
    LOAD off    0x00000000 vaddr 0x00010000 paddr 0x00010000 align 2**16
         filesz 0x00000d3c memsz 0x00000d3c flags r-x
    LOAD off    0x00000f04 vaddr 0x00020f04 paddr 0x00020f04 align 2**16
         filesz 0x00000134 memsz 0x0000013c flags rw-
 DYNAMIC off    0x00000f10 vaddr 0x00020f10 paddr 0x00020f10 align 2**2
         filesz 0x000000f0 memsz 0x000000f0 flags rw-
    NOTE off    0x00000170 vaddr 0x00010170 paddr 0x00010170 align 2**2
         filesz 0x00000044 memsz 0x00000044 flags r--
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rw-
   RELRO off    0x00000f04 vaddr 0x00020f04 paddr 0x00020f04 align 2**0
         filesz 0x000000fc memsz 0x000000fc flags r--

Dynamic Section:
  NEEDED               libc.so.6
  NEEDED               ld-linux-armhf.so.3
  INIT                 0x000103cc
  FINI                 0x00010c90
  INIT_ARRAY           0x00020f04
  INIT_ARRAYSZ         0x00000004
  FINI_ARRAY           0x00020f08
  FINI_ARRAYSZ         0x00000004
  GNU_HASH             0x000101b4
  STRTAB               0x00010298
  SYMTAB               0x000101f8
  STRSZ                0x0000008d
  SYMENT               0x00000010
  DEBUG                0x00000000
  PLTGOT               0x00021000
  PLTRELSZ             0x00000040
  PLTREL               0x00000011
  JMPREL               0x0001038c
  REL                  0x0001037c
  RELSZ                0x00000010
  RELENT               0x00000008
  VERNEED              0x0001033c
  VERNEEDNUM           0x00000002
  VERSYM               0x00010326

Version References:
  required from ld-linux-armhf.so.3:
    0x0d696914 0x00 03 GLIBC_2.4
  required from libc.so.6:
    0x0d696914 0x00 02 GLIBC_2.4
private flags = 5000400: [Version5 EABI] [hard-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn  Flags
  0 .interp       00000019  00010154  00010154  00000154  2**0  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  00010170  00010170  00000170  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  00010190  00010190  00000190  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     00000044  000101b4  000101b4  000001b4  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       000000a0  000101f8  000101f8  000001f8  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       0000008d  00010298  00010298  00000298  2**0  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  00000014  00010326  00010326  00000326  2**1  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000040  0001033c  0001033c  0000033c  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rel.dyn      00000010  0001037c  0001037c  0000037c  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rel.plt      00000040  0001038c  0001038c  0000038c  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         0000000c  000103cc  000103cc  000003cc  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          00000074  000103d8  000103d8  000003d8  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .text         00000844  0001044c  0001044c  0000044c  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .fini         00000008  00010c90  00010c90  00000c90  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .rodata       00000098  00010c98  00010c98  00000c98  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 .ARM.exidx    00000008  00010d30  00010d30  00000d30  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame     00000004  00010d38  00010d38  00000d38  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .init_array   00000004  00020f04  00020f04  00000f04  2**2  CONTENTS, ALLOC, LOAD, DATA
 18 .fini_array   00000004  00020f08  00020f08  00000f08  2**2  CONTENTS, ALLOC, LOAD, DATA
 19 .jcr          00000004  00020f0c  00020f0c  00000f0c  2**2  CONTENTS, ALLOC, LOAD, DATA
 20 .dynamic      000000f0  00020f10  00020f10  00000f10  2**2  CONTENTS, ALLOC, LOAD, DATA
 21 .got          00000030  00021000  00021000  00001000  2**2  CONTENTS, ALLOC, LOAD, DATA
 22 .data         00000008  00021030  00021030  00001030  2**2  CONTENTS, ALLOC, LOAD, DATA
 23 .bss          00000008  00021038  00021038  00001038  2**3  ALLOC
 24 .comment      0000003b  00000000  00000000  00001038  2**0  CONTENTS, READONLY
 25 .ARM.attributes 00000033  00000000  00000000  00001073  2**0  CONTENTS, READONLY
SYMBOL TABLE:
00010154 l    d  .interp	00000000              .interp
00010170 l    d  .note.ABI-tag	00000000              .note.ABI-tag
00010190 l    d  .note.gnu.build-id	00000000              .note.gnu.build-id
000101b4 l    d  .gnu.hash	00000000              .gnu.hash
000101f8 l    d  .dynsym	00000000              .dynsym
00010298 l    d  .dynstr	00000000              .dynstr
00010326 l    d  .gnu.version	00000000              .gnu.version
0001033c l    d  .gnu.version_r	00000000              .gnu.version_r
0001037c l    d  .rel.dyn	00000000              .rel.dyn
0001038c l    d  .rel.plt	00000000              .rel.plt
000103cc l    d  .init	00000000              .init
000103d8 l    d  .plt	00000000              .plt
0001044c l    d  .text	00000000              .text
00010c90 l    d  .fini	00000000              .fini
00010c98 l    d  .rodata	00000000              .rodata
00010d30 l    d  .ARM.exidx	00000000              .ARM.exidx
00010d38 l    d  .eh_frame	00000000              .eh_frame
00020f04 l    d  .init_array	00000000              .init_array
00020f08 l    d  .fini_array	00000000              .fini_array
00020f0c l    d  .jcr	00000000              .jcr
00020f10 l    d  .dynamic	00000000              .dynamic
00021000 l    d  .got	00000000              .got
00021030 l    d  .data	00000000              .data
00021038 l    d  .bss	00000000              .bss
00000000 l    d  .comment	00000000              .comment
00000000 l    d  .ARM.attributes	00000000              .ARM.attributes
00000000 l    df *ABS*	00000000              /usr/lib/gcc-cross/arm-linux-gnueabihf/5/../../../../arm-linux-gnueabihf/lib/../lib/crt1.o
00000000 l    df *ABS*	00000000              /usr/lib/gcc-cross/arm-linux-gnueabihf/5/../../../../arm-linux-gnueabihf/lib/../lib/crti.o
0001047c l     F .text	00000000              call_weak_fn
00000000 l    df *ABS*	00000000              /usr/lib/gcc-cross/arm-linux-gnueabihf/5/../../../../arm-linux-gnueabihf/lib/../lib/crtn.o
00000000 l    df *ABS*	00000000              crtstuff.c
00020f0c l     O .jcr	00000000              __JCR_LIST__
000104a0 l     F .text	00000000              deregister_tm_clones
000104c4 l     F .text	00000000              register_tm_clones
000104f0 l     F .text	00000000              __do_global_dtors_aux
0002103c l     O .bss	00000001              completed.9907
00020f08 l     O .fini_array	00000000              __do_global_dtors_aux_fini_array_entry
00010508 l     F .text	00000000              frame_dummy
00020f04 l     O .init_array	00000000              __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000              aggregate.c
0001052c l     F .text	0000001c              create_iterator
00010c9c l     O .rodata	00000004              vmt.4708
00000000 l    df *ABS*	00000000              array_aggregate.c
00010568 l     F .text	00000018              create_iterator_ov
00010580 l     F .text	0000003a              get
00010ca0 l     O .rodata	00000004              vmt.5430
00000000 l    df *ABS*	00000000              array_iterator.c
00010654 l     F .text	0000001e              first_ov
00010674 l     F .text	00000022              next_ov
00010698 l     F .text	0000002c              is_done_ov
000106c4 l     F .text	00000028              current_item_ov
00010ca4 l     O .rodata	00000010              vmt.5437
00000000 l    df *ABS*	00000000              iterator.c
00010790 l     F .text	0000001a              first
000107ac l     F .text	0000001a              next
000107c8 l     F .text	0000001c              is_done
000107e4 l     F .text	0000001c              current_item
00010cb4 l     O .rodata	00000010              vmt.4708
00000000 l    df *ABS*	00000000              list_aggregate.c
00010850 l     F .text	00000018              create_iterator_ov
00010868 l     F .text	0000005c              get
00010cc4 l     O .rodata	00000004              vmt.5488
00000000 l    df *ABS*	00000000              list_iterator.c
0001097c l     F .text	0000001e              first_ov
0001099c l     F .text	00000022              next_ov
000109c0 l     F .text	0000002c              is_done_ov
000109ec l     F .text	00000028              current_item_ov
00010cc8 l     O .rodata	00000010              vmt.5488
00000000 l    df *ABS*	00000000              test.c
00010ab8 l     F .text	00000030              __list_add
00010ae8 l     F .text	00000020              list_add
00000000 l    df *ABS*	00000000              elf-init.oS
00000000 l    df *ABS*	00000000              crtstuff.c
00010d38 l     O .eh_frame	00000000              __FRAME_END__
00020f0c l     O .jcr	00000000              __JCR_END__
00000000 l    df *ABS*	00000000              
00020f08 l       .init_array	00000000              __init_array_end
00020f10 l     O .dynamic	00000000              _DYNAMIC
00020f04 l       .init_array	00000000              __init_array_start
00021000 l     O .got	00000000              _GLOBAL_OFFSET_TABLE_
00010c8c g     F .text	00000002              __libc_csu_fini
00000000  w      *UND*	00000000              _ITM_deregisterTMCloneTable
00021030  w      .data	00000000              data_start
00000000       F *UND*	00000000              printf@@GLIBC_2.4
00021038 g       .bss	00000000              __bss_start__
00010934 g     F .text	0000002e              construct_list_aggregate
00000000       F *UND*	00000000              free@@GLIBC_2.4
00010548 g     F .text	00000020              aggregate_init
00021038 g     O .bss	00000004              __stack_chk_guard@@GLIBC_2.4
00010964 g     F .text	00000016              destruct_list_aggregate
00021040 g       .bss	00000000              _bss_end__
000105bc g     F .text	0000004c              array_aggregate_init
00021038 g       .data	00000000              _edata
00010c90 g     F .fini	00000000              _fini
00021040 g       .bss	00000000              __bss_end__
00000000       F *UND*	00000000              __stack_chk_fail@@GLIBC_2.4
000106ec g     F .text	0000005c              array_iterator_init
00010800 g     F .text	00000050              iterator_init
0001063c g     F .text	00000016              destruct_array_aggregate
000108c4 g     F .text	0000006e              list_aggregate_init
00021030 g       .data	00000000              __data_start
00010a70 g     F .text	0000002e              construct_list_iterator
00000000       F *UND*	00000000              malloc@@GLIBC_2.4
00000000       F *UND*	00000000              __libc_start_main@@GLIBC_2.4
00010748 g     F .text	0000002e              construct_array_iterator
00000000  w      *UND*	00000000              __gmon_start__
00021034 g     O .data	00000000              .hidden __dso_handle
00010c98 g     O .rodata	00000004              _IO_stdin_used
00010608 g     F .text	00000032              construct_array_aggregate
00010c50 g     F .text	0000003c              __libc_csu_init
00000000       F *UND*	00000000              memset@@GLIBC_2.4
00021040 g       .bss	00000000              _end
0001044c g     F .text	00000000              _start
00010aa0 g     F .text	00000016              destruct_list_iterator
00021040 g       .bss	00000000              __end__
00021038 g       .bss	00000000              __bss_start
00010b08 g     F .text	00000146              main
00000000  w      *UND*	00000000              _Jv_RegisterClasses
00021038 g     O .data	00000000              .hidden __TMC_END__
00000000  w      *UND*	00000000              _ITM_registerTMCloneTable
00010a14 g     F .text	0000005c              list_iterator_init
00010778 g     F .text	00000016              destruct_array_iterator
00000000       F *UND*	00000000              abort@@GLIBC_2.4
000103cc g     F .init	00000000              _init



Disassembly of section .init:

000103cc <_init>:
_init():
   103cc:	e92d4008 	push	{r3, lr}
   103d0:	eb000029 	bl	1047c <call_weak_fn>
   103d4:	e8bd8008 	pop	{r3, pc}

Disassembly of section .plt:

000103d8 <printf@plt-0x14>:
   103d8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   103dc:	e59fe004 	ldr	lr, [pc, #4]	; 103e8 <_init+0x1c>
   103e0:	e08fe00e 	add	lr, pc, lr
   103e4:	e5bef008 	ldr	pc, [lr, #8]!
   103e8:	00010c18 	.word	0x00010c18

000103ec <printf@plt>:
   103ec:	e28fc600 	add	ip, pc, #0, 12
   103f0:	e28cca10 	add	ip, ip, #16, 20	; 0x10000
   103f4:	e5bcfc18 	ldr	pc, [ip, #3096]!	; 0xc18

000103f8 <free@plt>:
   103f8:	e28fc600 	add	ip, pc, #0, 12
   103fc:	e28cca10 	add	ip, ip, #16, 20	; 0x10000
   10400:	e5bcfc10 	ldr	pc, [ip, #3088]!	; 0xc10

00010404 <__stack_chk_fail@plt>:
   10404:	e28fc600 	add	ip, pc, #0, 12
   10408:	e28cca10 	add	ip, ip, #16, 20	; 0x10000
   1040c:	e5bcfc08 	ldr	pc, [ip, #3080]!	; 0xc08

00010410 <malloc@plt>:
   10410:	e28fc600 	add	ip, pc, #0, 12
   10414:	e28cca10 	add	ip, ip, #16, 20	; 0x10000
   10418:	e5bcfc00 	ldr	pc, [ip, #3072]!	; 0xc00

0001041c <__libc_start_main@plt>:
   1041c:	e28fc600 	add	ip, pc, #0, 12
   10420:	e28cca10 	add	ip, ip, #16, 20	; 0x10000
   10424:	e5bcfbf8 	ldr	pc, [ip, #3064]!	; 0xbf8

00010428 <__gmon_start__@plt>:
   10428:	e28fc600 	add	ip, pc, #0, 12
   1042c:	e28cca10 	add	ip, ip, #16, 20	; 0x10000
   10430:	e5bcfbf0 	ldr	pc, [ip, #3056]!	; 0xbf0

00010434 <memset@plt>:
   10434:	e28fc600 	add	ip, pc, #0, 12
   10438:	e28cca10 	add	ip, ip, #16, 20	; 0x10000
   1043c:	e5bcfbe8 	ldr	pc, [ip, #3048]!	; 0xbe8

00010440 <abort@plt>:
   10440:	e28fc600 	add	ip, pc, #0, 12
   10444:	e28cca10 	add	ip, ip, #16, 20	; 0x10000
   10448:	e5bcfbe0 	ldr	pc, [ip, #3040]!	; 0xbe0

Disassembly of section .text:

0001044c <_start>:
_start():
   1044c:	f04f 0b00 	mov.w	fp, #0
   10450:	f04f 0e00 	mov.w	lr, #0
   10454:	bc02      	pop	{r1}
   10456:	466a      	mov	r2, sp
   10458:	b404      	push	{r2}
   1045a:	b401      	push	{r0}
   1045c:	f8df c010 	ldr.w	ip, [pc, #16]	; 10470 <_start+0x24>
   10460:	f84d cd04 	str.w	ip, [sp, #-4]!
   10464:	4803      	ldr	r0, [pc, #12]	; (10474 <_start+0x28>)
   10466:	4b04      	ldr	r3, [pc, #16]	; (10478 <_start+0x2c>)
   10468:	f7ff efd8 	blx	1041c <__libc_start_main@plt>
   1046c:	f7ff efe8 	blx	10440 <abort@plt>
   10470:	00010c8d 	.word	0x00010c8d
   10474:	00010b09 	.word	0x00010b09
   10478:	00010c51 	.word	0x00010c51

0001047c <call_weak_fn>:
call_weak_fn():
   1047c:	e59f3014 	ldr	r3, [pc, #20]	; 10498 <call_weak_fn+0x1c>
   10480:	e59f2014 	ldr	r2, [pc, #20]	; 1049c <call_weak_fn+0x20>
   10484:	e08f3003 	add	r3, pc, r3
   10488:	e7932002 	ldr	r2, [r3, r2]
   1048c:	e3520000 	cmp	r2, #0
   10490:	012fff1e 	bxeq	lr
   10494:	eaffffe3 	b	10428 <__gmon_start__@plt>
   10498:	00010b74 	.word	0x00010b74
   1049c:	0000002c 	.word	0x0000002c

000104a0 <deregister_tm_clones>:
deregister_tm_clones():
   104a0:	4b07      	ldr	r3, [pc, #28]	; (104c0 <deregister_tm_clones+0x20>)
   104a2:	f241 0038 	movw	r0, #4152	; 0x1038
   104a6:	f2c0 0002 	movt	r0, #2
   104aa:	1a1b      	subs	r3, r3, r0
   104ac:	2b06      	cmp	r3, #6
   104ae:	d905      	bls.n	104bc <deregister_tm_clones+0x1c>
   104b0:	f240 0300 	movw	r3, #0
   104b4:	f2c0 0300 	movt	r3, #0
   104b8:	b103      	cbz	r3, 104bc <deregister_tm_clones+0x1c>
   104ba:	4718      	bx	r3
   104bc:	4770      	bx	lr
   104be:	bf00      	nop
   104c0:	0002103b 	.word	0x0002103b

000104c4 <register_tm_clones>:
register_tm_clones():
   104c4:	f241 0338 	movw	r3, #4152	; 0x1038
   104c8:	f241 0038 	movw	r0, #4152	; 0x1038
   104cc:	f2c0 0302 	movt	r3, #2
   104d0:	f2c0 0002 	movt	r0, #2
   104d4:	1a19      	subs	r1, r3, r0
   104d6:	1089      	asrs	r1, r1, #2
   104d8:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
   104dc:	1049      	asrs	r1, r1, #1
   104de:	d005      	beq.n	104ec <register_tm_clones+0x28>
   104e0:	f240 0300 	movw	r3, #0
   104e4:	f2c0 0300 	movt	r3, #0
   104e8:	b103      	cbz	r3, 104ec <register_tm_clones+0x28>
   104ea:	4718      	bx	r3
   104ec:	4770      	bx	lr
   104ee:	bf00      	nop

000104f0 <__do_global_dtors_aux>:
__do_global_dtors_aux():
   104f0:	b510      	push	{r4, lr}
   104f2:	f241 043c 	movw	r4, #4156	; 0x103c
   104f6:	f2c0 0402 	movt	r4, #2
   104fa:	7823      	ldrb	r3, [r4, #0]
   104fc:	b91b      	cbnz	r3, 10506 <__do_global_dtors_aux+0x16>
   104fe:	f7ff ffcf 	bl	104a0 <deregister_tm_clones>
   10502:	2301      	movs	r3, #1
   10504:	7023      	strb	r3, [r4, #0]
   10506:	bd10      	pop	{r4, pc}

00010508 <frame_dummy>:
frame_dummy():
   10508:	b508      	push	{r3, lr}
   1050a:	f640 700c 	movw	r0, #3852	; 0xf0c
   1050e:	f2c0 0002 	movt	r0, #2
   10512:	6803      	ldr	r3, [r0, #0]
   10514:	b913      	cbnz	r3, 1051c <frame_dummy+0x14>
   10516:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   1051a:	e7d3      	b.n	104c4 <register_tm_clones>
   1051c:	f240 0300 	movw	r3, #0
   10520:	f2c0 0300 	movt	r3, #0
   10524:	2b00      	cmp	r3, #0
   10526:	d0f6      	beq.n	10516 <frame_dummy+0xe>
   10528:	4798      	blx	r3
   1052a:	e7f4      	b.n	10516 <frame_dummy+0xe>

0001052c <create_iterator>:
create_iterator():
   1052c:	b580      	push	{r7, lr}
   1052e:	b082      	sub	sp, #8
   10530:	af00      	add	r7, sp, #0
   10532:	6078      	str	r0, [r7, #4]
   10534:	687b      	ldr	r3, [r7, #4]
   10536:	681b      	ldr	r3, [r3, #0]
   10538:	681b      	ldr	r3, [r3, #0]
   1053a:	6878      	ldr	r0, [r7, #4]
   1053c:	4798      	blx	r3
   1053e:	bf00      	nop
   10540:	4618      	mov	r0, r3
   10542:	3708      	adds	r7, #8
   10544:	46bd      	mov	sp, r7
   10546:	bd80      	pop	{r7, pc}

00010548 <aggregate_init>:
aggregate_init():
   10548:	b480      	push	{r7}
   1054a:	b083      	sub	sp, #12
   1054c:	af00      	add	r7, sp, #0
   1054e:	6078      	str	r0, [r7, #4]
   10550:	687a      	ldr	r2, [r7, #4]
   10552:	f240 532d 	movw	r3, #1325	; 0x52d
   10556:	f2c0 0301 	movt	r3, #1
   1055a:	6053      	str	r3, [r2, #4]
   1055c:	bf00      	nop
   1055e:	370c      	adds	r7, #12
   10560:	46bd      	mov	sp, r7
   10562:	f85d 7b04 	ldr.w	r7, [sp], #4
   10566:	4770      	bx	lr

00010568 <create_iterator_ov>:
create_iterator_ov():
   10568:	b580      	push	{r7, lr}
   1056a:	b082      	sub	sp, #8
   1056c:	af00      	add	r7, sp, #0
   1056e:	6078      	str	r0, [r7, #4]
   10570:	6878      	ldr	r0, [r7, #4]
   10572:	f000 f8e9 	bl	10748 <construct_array_iterator>
   10576:	4603      	mov	r3, r0
   10578:	4618      	mov	r0, r3
   1057a:	3708      	adds	r7, #8
   1057c:	46bd      	mov	sp, r7
   1057e:	bd80      	pop	{r7, pc}

00010580 <get>:
get():
   10580:	b480      	push	{r7}
   10582:	b085      	sub	sp, #20
   10584:	af00      	add	r7, sp, #0
   10586:	6078      	str	r0, [r7, #4]
   10588:	6039      	str	r1, [r7, #0]
   1058a:	687b      	ldr	r3, [r7, #4]
   1058c:	60fb      	str	r3, [r7, #12]
   1058e:	683b      	ldr	r3, [r7, #0]
   10590:	2b00      	cmp	r3, #0
   10592:	db0b      	blt.n	105ac <get+0x2c>
   10594:	68fb      	ldr	r3, [r7, #12]
   10596:	689a      	ldr	r2, [r3, #8]
   10598:	683b      	ldr	r3, [r7, #0]
   1059a:	429a      	cmp	r2, r3
   1059c:	dd06      	ble.n	105ac <get+0x2c>
   1059e:	68fb      	ldr	r3, [r7, #12]
   105a0:	68da      	ldr	r2, [r3, #12]
   105a2:	683b      	ldr	r3, [r7, #0]
   105a4:	009b      	lsls	r3, r3, #2
   105a6:	4413      	add	r3, r2
   105a8:	681b      	ldr	r3, [r3, #0]
   105aa:	e000      	b.n	105ae <get+0x2e>
   105ac:	2300      	movs	r3, #0
   105ae:	4618      	mov	r0, r3
   105b0:	3714      	adds	r7, #20
   105b2:	46bd      	mov	sp, r7
   105b4:	f85d 7b04 	ldr.w	r7, [sp], #4
   105b8:	4770      	bx	lr
   105ba:	bf00      	nop

000105bc <array_aggregate_init>:
array_aggregate_init():
   105bc:	b580      	push	{r7, lr}
   105be:	b084      	sub	sp, #16
   105c0:	af00      	add	r7, sp, #0
   105c2:	60f8      	str	r0, [r7, #12]
   105c4:	60b9      	str	r1, [r7, #8]
   105c6:	607a      	str	r2, [r7, #4]
   105c8:	68fb      	ldr	r3, [r7, #12]
   105ca:	4618      	mov	r0, r3
   105cc:	f7ff ffbc 	bl	10548 <aggregate_init>
   105d0:	68fa      	ldr	r2, [r7, #12]
   105d2:	f640 43a0 	movw	r3, #3232	; 0xca0
   105d6:	f2c0 0301 	movt	r3, #1
   105da:	6013      	str	r3, [r2, #0]
   105dc:	68fa      	ldr	r2, [r7, #12]
   105de:	f240 5381 	movw	r3, #1409	; 0x581
   105e2:	f2c0 0301 	movt	r3, #1
   105e6:	6113      	str	r3, [r2, #16]
   105e8:	68fa      	ldr	r2, [r7, #12]
   105ea:	f240 5369 	movw	r3, #1385	; 0x569
   105ee:	f2c0 0301 	movt	r3, #1
   105f2:	6153      	str	r3, [r2, #20]
   105f4:	68fb      	ldr	r3, [r7, #12]
   105f6:	68ba      	ldr	r2, [r7, #8]
   105f8:	60da      	str	r2, [r3, #12]
   105fa:	68fb      	ldr	r3, [r7, #12]
   105fc:	687a      	ldr	r2, [r7, #4]
   105fe:	609a      	str	r2, [r3, #8]
   10600:	bf00      	nop
   10602:	3710      	adds	r7, #16
   10604:	46bd      	mov	sp, r7
   10606:	bd80      	pop	{r7, pc}

00010608 <construct_array_aggregate>:
construct_array_aggregate():
   10608:	b580      	push	{r7, lr}
   1060a:	b084      	sub	sp, #16
   1060c:	af00      	add	r7, sp, #0
   1060e:	6078      	str	r0, [r7, #4]
   10610:	6039      	str	r1, [r7, #0]
   10612:	2018      	movs	r0, #24
   10614:	f7ff eefc 	blx	10410 <malloc@plt>
   10618:	4603      	mov	r3, r0
   1061a:	60fb      	str	r3, [r7, #12]
   1061c:	2218      	movs	r2, #24
   1061e:	2100      	movs	r1, #0
   10620:	68f8      	ldr	r0, [r7, #12]
   10622:	f7ff ef08 	blx	10434 <memset@plt>
   10626:	683a      	ldr	r2, [r7, #0]
   10628:	6879      	ldr	r1, [r7, #4]
   1062a:	68f8      	ldr	r0, [r7, #12]
   1062c:	f7ff ffc6 	bl	105bc <array_aggregate_init>
   10630:	68fb      	ldr	r3, [r7, #12]
   10632:	4618      	mov	r0, r3
   10634:	3710      	adds	r7, #16
   10636:	46bd      	mov	sp, r7
   10638:	bd80      	pop	{r7, pc}
   1063a:	bf00      	nop

0001063c <destruct_array_aggregate>:
destruct_array_aggregate():
   1063c:	b580      	push	{r7, lr}
   1063e:	b082      	sub	sp, #8
   10640:	af00      	add	r7, sp, #0
   10642:	6078      	str	r0, [r7, #4]
   10644:	6878      	ldr	r0, [r7, #4]
   10646:	f7ff eed8 	blx	103f8 <free@plt>
   1064a:	bf00      	nop
   1064c:	3708      	adds	r7, #8
   1064e:	46bd      	mov	sp, r7
   10650:	bd80      	pop	{r7, pc}
   10652:	bf00      	nop

00010654 <first_ov>:
first_ov():
   10654:	b480      	push	{r7}
   10656:	b085      	sub	sp, #20
   10658:	af00      	add	r7, sp, #0
   1065a:	6078      	str	r0, [r7, #4]
   1065c:	687b      	ldr	r3, [r7, #4]
   1065e:	60fb      	str	r3, [r7, #12]
   10660:	68fb      	ldr	r3, [r7, #12]
   10662:	2200      	movs	r2, #0
   10664:	619a      	str	r2, [r3, #24]
   10666:	bf00      	nop
   10668:	3714      	adds	r7, #20
   1066a:	46bd      	mov	sp, r7
   1066c:	f85d 7b04 	ldr.w	r7, [sp], #4
   10670:	4770      	bx	lr
   10672:	bf00      	nop

00010674 <next_ov>:
next_ov():
   10674:	b480      	push	{r7}
   10676:	b085      	sub	sp, #20
   10678:	af00      	add	r7, sp, #0
   1067a:	6078      	str	r0, [r7, #4]
   1067c:	687b      	ldr	r3, [r7, #4]
   1067e:	60fb      	str	r3, [r7, #12]
   10680:	68fb      	ldr	r3, [r7, #12]
   10682:	699b      	ldr	r3, [r3, #24]
   10684:	1c5a      	adds	r2, r3, #1
   10686:	68fb      	ldr	r3, [r7, #12]
   10688:	619a      	str	r2, [r3, #24]
   1068a:	bf00      	nop
   1068c:	3714      	adds	r7, #20
   1068e:	46bd      	mov	sp, r7
   10690:	f85d 7b04 	ldr.w	r7, [sp], #4
   10694:	4770      	bx	lr
   10696:	bf00      	nop

00010698 <is_done_ov>:
is_done_ov():
   10698:	b480      	push	{r7}
   1069a:	b085      	sub	sp, #20
   1069c:	af00      	add	r7, sp, #0
   1069e:	6078      	str	r0, [r7, #4]
   106a0:	687b      	ldr	r3, [r7, #4]
   106a2:	60fb      	str	r3, [r7, #12]
   106a4:	68fb      	ldr	r3, [r7, #12]
   106a6:	699a      	ldr	r2, [r3, #24]
   106a8:	68fb      	ldr	r3, [r7, #12]
   106aa:	695b      	ldr	r3, [r3, #20]
   106ac:	689b      	ldr	r3, [r3, #8]
   106ae:	429a      	cmp	r2, r3
   106b0:	d101      	bne.n	106b6 <is_done_ov+0x1e>
   106b2:	2301      	movs	r3, #1
   106b4:	e000      	b.n	106b8 <is_done_ov+0x20>
   106b6:	2300      	movs	r3, #0
   106b8:	4618      	mov	r0, r3
   106ba:	3714      	adds	r7, #20
   106bc:	46bd      	mov	sp, r7
   106be:	f85d 7b04 	ldr.w	r7, [sp], #4
   106c2:	4770      	bx	lr

000106c4 <current_item_ov>:
current_item_ov():
   106c4:	b580      	push	{r7, lr}
   106c6:	b084      	sub	sp, #16
   106c8:	af00      	add	r7, sp, #0
   106ca:	6078      	str	r0, [r7, #4]
   106cc:	687b      	ldr	r3, [r7, #4]
   106ce:	60fb      	str	r3, [r7, #12]
   106d0:	68fb      	ldr	r3, [r7, #12]
   106d2:	695b      	ldr	r3, [r3, #20]
   106d4:	691b      	ldr	r3, [r3, #16]
   106d6:	68fa      	ldr	r2, [r7, #12]
   106d8:	6950      	ldr	r0, [r2, #20]
   106da:	68fa      	ldr	r2, [r7, #12]
   106dc:	6992      	ldr	r2, [r2, #24]
   106de:	4611      	mov	r1, r2
   106e0:	4798      	blx	r3
   106e2:	4603      	mov	r3, r0
   106e4:	4618      	mov	r0, r3
   106e6:	3710      	adds	r7, #16
   106e8:	46bd      	mov	sp, r7
   106ea:	bd80      	pop	{r7, pc}

000106ec <array_iterator_init>:
array_iterator_init():
   106ec:	b580      	push	{r7, lr}
   106ee:	b082      	sub	sp, #8
   106f0:	af00      	add	r7, sp, #0
   106f2:	6078      	str	r0, [r7, #4]
   106f4:	6039      	str	r1, [r7, #0]
   106f6:	687b      	ldr	r3, [r7, #4]
   106f8:	4618      	mov	r0, r3
   106fa:	f000 f881 	bl	10800 <iterator_init>
   106fe:	687a      	ldr	r2, [r7, #4]
   10700:	f640 43a4 	movw	r3, #3236	; 0xca4
   10704:	f2c0 0301 	movt	r3, #1
   10708:	6013      	str	r3, [r2, #0]
   1070a:	687a      	ldr	r2, [r7, #4]
   1070c:	f240 6375 	movw	r3, #1653	; 0x675
   10710:	f2c0 0301 	movt	r3, #1
   10714:	6213      	str	r3, [r2, #32]
   10716:	687a      	ldr	r2, [r7, #4]
   10718:	f240 6355 	movw	r3, #1621	; 0x655
   1071c:	f2c0 0301 	movt	r3, #1
   10720:	61d3      	str	r3, [r2, #28]
   10722:	687a      	ldr	r2, [r7, #4]
   10724:	f240 6399 	movw	r3, #1689	; 0x699
   10728:	f2c0 0301 	movt	r3, #1
   1072c:	6253      	str	r3, [r2, #36]	; 0x24
   1072e:	687a      	ldr	r2, [r7, #4]
   10730:	f240 63c5 	movw	r3, #1733	; 0x6c5
   10734:	f2c0 0301 	movt	r3, #1
   10738:	6293      	str	r3, [r2, #40]	; 0x28
   1073a:	687b      	ldr	r3, [r7, #4]
   1073c:	683a      	ldr	r2, [r7, #0]
   1073e:	615a      	str	r2, [r3, #20]
   10740:	bf00      	nop
   10742:	3708      	adds	r7, #8
   10744:	46bd      	mov	sp, r7
   10746:	bd80      	pop	{r7, pc}

00010748 <construct_array_iterator>:
construct_array_iterator():
   10748:	b580      	push	{r7, lr}
   1074a:	b084      	sub	sp, #16
   1074c:	af00      	add	r7, sp, #0
   1074e:	6078      	str	r0, [r7, #4]
   10750:	202c      	movs	r0, #44	; 0x2c
   10752:	f7ff ee5e 	blx	10410 <malloc@plt>
   10756:	4603      	mov	r3, r0
   10758:	60fb      	str	r3, [r7, #12]
   1075a:	222c      	movs	r2, #44	; 0x2c
   1075c:	2100      	movs	r1, #0
   1075e:	68f8      	ldr	r0, [r7, #12]
   10760:	f7ff ee68 	blx	10434 <memset@plt>
   10764:	6879      	ldr	r1, [r7, #4]
   10766:	68f8      	ldr	r0, [r7, #12]
   10768:	f7ff ffc0 	bl	106ec <array_iterator_init>
   1076c:	68fb      	ldr	r3, [r7, #12]
   1076e:	4618      	mov	r0, r3
   10770:	3710      	adds	r7, #16
   10772:	46bd      	mov	sp, r7
   10774:	bd80      	pop	{r7, pc}
   10776:	bf00      	nop

00010778 <destruct_array_iterator>:
destruct_array_iterator():
   10778:	b580      	push	{r7, lr}
   1077a:	b082      	sub	sp, #8
   1077c:	af00      	add	r7, sp, #0
   1077e:	6078      	str	r0, [r7, #4]
   10780:	6878      	ldr	r0, [r7, #4]
   10782:	f7ff ee3a 	blx	103f8 <free@plt>
   10786:	bf00      	nop
   10788:	3708      	adds	r7, #8
   1078a:	46bd      	mov	sp, r7
   1078c:	bd80      	pop	{r7, pc}
   1078e:	bf00      	nop

00010790 <first>:
first():
   10790:	b580      	push	{r7, lr}
   10792:	b082      	sub	sp, #8
   10794:	af00      	add	r7, sp, #0
   10796:	6078      	str	r0, [r7, #4]
   10798:	687b      	ldr	r3, [r7, #4]
   1079a:	681b      	ldr	r3, [r3, #0]
   1079c:	681b      	ldr	r3, [r3, #0]
   1079e:	6878      	ldr	r0, [r7, #4]
   107a0:	4798      	blx	r3
   107a2:	bf00      	nop
   107a4:	3708      	adds	r7, #8
   107a6:	46bd      	mov	sp, r7
   107a8:	bd80      	pop	{r7, pc}
   107aa:	bf00      	nop

000107ac <next>:
next():
   107ac:	b580      	push	{r7, lr}
   107ae:	b082      	sub	sp, #8
   107b0:	af00      	add	r7, sp, #0
   107b2:	6078      	str	r0, [r7, #4]
   107b4:	687b      	ldr	r3, [r7, #4]
   107b6:	681b      	ldr	r3, [r3, #0]
   107b8:	685b      	ldr	r3, [r3, #4]
   107ba:	6878      	ldr	r0, [r7, #4]
   107bc:	4798      	blx	r3
   107be:	bf00      	nop
   107c0:	3708      	adds	r7, #8
   107c2:	46bd      	mov	sp, r7
   107c4:	bd80      	pop	{r7, pc}
   107c6:	bf00      	nop

000107c8 <is_done>:
is_done():
   107c8:	b580      	push	{r7, lr}
   107ca:	b082      	sub	sp, #8
   107cc:	af00      	add	r7, sp, #0
   107ce:	6078      	str	r0, [r7, #4]
   107d0:	687b      	ldr	r3, [r7, #4]
   107d2:	681b      	ldr	r3, [r3, #0]
   107d4:	689b      	ldr	r3, [r3, #8]
   107d6:	6878      	ldr	r0, [r7, #4]
   107d8:	4798      	blx	r3
   107da:	bf00      	nop
   107dc:	4618      	mov	r0, r3
   107de:	3708      	adds	r7, #8
   107e0:	46bd      	mov	sp, r7
   107e2:	bd80      	pop	{r7, pc}

000107e4 <current_item>:
current_item():
   107e4:	b580      	push	{r7, lr}
   107e6:	b082      	sub	sp, #8
   107e8:	af00      	add	r7, sp, #0
   107ea:	6078      	str	r0, [r7, #4]
   107ec:	687b      	ldr	r3, [r7, #4]
   107ee:	681b      	ldr	r3, [r3, #0]
   107f0:	68db      	ldr	r3, [r3, #12]
   107f2:	6878      	ldr	r0, [r7, #4]
   107f4:	4798      	blx	r3
   107f6:	bf00      	nop
   107f8:	4618      	mov	r0, r3
   107fa:	3708      	adds	r7, #8
   107fc:	46bd      	mov	sp, r7
   107fe:	bd80      	pop	{r7, pc}

00010800 <iterator_init>:
iterator_init():
   10800:	b480      	push	{r7}
   10802:	b083      	sub	sp, #12
   10804:	af00      	add	r7, sp, #0
   10806:	6078      	str	r0, [r7, #4]
   10808:	687a      	ldr	r2, [r7, #4]
   1080a:	f640 43b4 	movw	r3, #3252	; 0xcb4
   1080e:	f2c0 0301 	movt	r3, #1
   10812:	6013      	str	r3, [r2, #0]
   10814:	687a      	ldr	r2, [r7, #4]
   10816:	f240 7391 	movw	r3, #1937	; 0x791
   1081a:	f2c0 0301 	movt	r3, #1
   1081e:	6053      	str	r3, [r2, #4]
   10820:	687a      	ldr	r2, [r7, #4]
   10822:	f240 73ad 	movw	r3, #1965	; 0x7ad
   10826:	f2c0 0301 	movt	r3, #1
   1082a:	6093      	str	r3, [r2, #8]
   1082c:	687a      	ldr	r2, [r7, #4]
   1082e:	f240 73c9 	movw	r3, #1993	; 0x7c9
   10832:	f2c0 0301 	movt	r3, #1
   10836:	60d3      	str	r3, [r2, #12]
   10838:	687a      	ldr	r2, [r7, #4]
   1083a:	f240 73e5 	movw	r3, #2021	; 0x7e5
   1083e:	f2c0 0301 	movt	r3, #1
   10842:	6113      	str	r3, [r2, #16]
   10844:	bf00      	nop
   10846:	370c      	adds	r7, #12
   10848:	46bd      	mov	sp, r7
   1084a:	f85d 7b04 	ldr.w	r7, [sp], #4
   1084e:	4770      	bx	lr

00010850 <create_iterator_ov>:
create_iterator_ov():
   10850:	b580      	push	{r7, lr}
   10852:	b082      	sub	sp, #8
   10854:	af00      	add	r7, sp, #0
   10856:	6078      	str	r0, [r7, #4]
   10858:	6878      	ldr	r0, [r7, #4]
   1085a:	f000 f909 	bl	10a70 <construct_list_iterator>
   1085e:	4603      	mov	r3, r0
   10860:	4618      	mov	r0, r3
   10862:	3708      	adds	r7, #8
   10864:	46bd      	mov	sp, r7
   10866:	bd80      	pop	{r7, pc}

00010868 <get>:
get():
   10868:	b480      	push	{r7}
   1086a:	b087      	sub	sp, #28
   1086c:	af00      	add	r7, sp, #0
   1086e:	6078      	str	r0, [r7, #4]
   10870:	6039      	str	r1, [r7, #0]
   10872:	687b      	ldr	r3, [r7, #4]
   10874:	617b      	str	r3, [r7, #20]
   10876:	683b      	ldr	r3, [r7, #0]
   10878:	2b00      	cmp	r3, #0
   1087a:	db1c      	blt.n	108b6 <get+0x4e>
   1087c:	697b      	ldr	r3, [r7, #20]
   1087e:	68da      	ldr	r2, [r3, #12]
   10880:	683b      	ldr	r3, [r7, #0]
   10882:	429a      	cmp	r2, r3
   10884:	dd17      	ble.n	108b6 <get+0x4e>
   10886:	2300      	movs	r3, #0
   10888:	613b      	str	r3, [r7, #16]
   1088a:	697b      	ldr	r3, [r7, #20]
   1088c:	689b      	ldr	r3, [r3, #8]
   1088e:	681b      	ldr	r3, [r3, #0]
   10890:	60fb      	str	r3, [r7, #12]
   10892:	e00b      	b.n	108ac <get+0x44>
   10894:	693b      	ldr	r3, [r7, #16]
   10896:	1c5a      	adds	r2, r3, #1
   10898:	613a      	str	r2, [r7, #16]
   1089a:	683a      	ldr	r2, [r7, #0]
   1089c:	4293      	cmp	r3, r2
   1089e:	d102      	bne.n	108a6 <get+0x3e>
   108a0:	68fb      	ldr	r3, [r7, #12]
   108a2:	689b      	ldr	r3, [r3, #8]
   108a4:	e008      	b.n	108b8 <get+0x50>
   108a6:	68fb      	ldr	r3, [r7, #12]
   108a8:	681b      	ldr	r3, [r3, #0]
   108aa:	60fb      	str	r3, [r7, #12]
   108ac:	68fa      	ldr	r2, [r7, #12]
   108ae:	697b      	ldr	r3, [r7, #20]
   108b0:	689b      	ldr	r3, [r3, #8]
   108b2:	429a      	cmp	r2, r3
   108b4:	d1ee      	bne.n	10894 <get+0x2c>
   108b6:	2300      	movs	r3, #0
   108b8:	4618      	mov	r0, r3
   108ba:	371c      	adds	r7, #28
   108bc:	46bd      	mov	sp, r7
   108be:	f85d 7b04 	ldr.w	r7, [sp], #4
   108c2:	4770      	bx	lr

000108c4 <list_aggregate_init>:
list_aggregate_init():
   108c4:	b580      	push	{r7, lr}
   108c6:	b084      	sub	sp, #16
   108c8:	af00      	add	r7, sp, #0
   108ca:	6078      	str	r0, [r7, #4]
   108cc:	6039      	str	r1, [r7, #0]
   108ce:	687b      	ldr	r3, [r7, #4]
   108d0:	4618      	mov	r0, r3
   108d2:	f7ff fe39 	bl	10548 <aggregate_init>
   108d6:	687a      	ldr	r2, [r7, #4]
   108d8:	f640 43c4 	movw	r3, #3268	; 0xcc4
   108dc:	f2c0 0301 	movt	r3, #1
   108e0:	6013      	str	r3, [r2, #0]
   108e2:	687a      	ldr	r2, [r7, #4]
   108e4:	f640 0369 	movw	r3, #2153	; 0x869
   108e8:	f2c0 0301 	movt	r3, #1
   108ec:	6113      	str	r3, [r2, #16]
   108ee:	687a      	ldr	r2, [r7, #4]
   108f0:	f640 0351 	movw	r3, #2129	; 0x851
   108f4:	f2c0 0301 	movt	r3, #1
   108f8:	6153      	str	r3, [r2, #20]
   108fa:	687b      	ldr	r3, [r7, #4]
   108fc:	683a      	ldr	r2, [r7, #0]
   108fe:	609a      	str	r2, [r3, #8]
   10900:	2300      	movs	r3, #0
   10902:	60fb      	str	r3, [r7, #12]
   10904:	687b      	ldr	r3, [r7, #4]
   10906:	689b      	ldr	r3, [r3, #8]
   10908:	681b      	ldr	r3, [r3, #0]
   1090a:	603b      	str	r3, [r7, #0]
   1090c:	e005      	b.n	1091a <list_aggregate_init+0x56>
   1090e:	68fb      	ldr	r3, [r7, #12]
   10910:	3301      	adds	r3, #1
   10912:	60fb      	str	r3, [r7, #12]
   10914:	683b      	ldr	r3, [r7, #0]
   10916:	681b      	ldr	r3, [r3, #0]
   10918:	603b      	str	r3, [r7, #0]
   1091a:	687b      	ldr	r3, [r7, #4]
   1091c:	689a      	ldr	r2, [r3, #8]
   1091e:	683b      	ldr	r3, [r7, #0]
   10920:	429a      	cmp	r2, r3
   10922:	d1f4      	bne.n	1090e <list_aggregate_init+0x4a>
   10924:	687b      	ldr	r3, [r7, #4]
   10926:	68fa      	ldr	r2, [r7, #12]
   10928:	60da      	str	r2, [r3, #12]
   1092a:	bf00      	nop
   1092c:	3710      	adds	r7, #16
   1092e:	46bd      	mov	sp, r7
   10930:	bd80      	pop	{r7, pc}
   10932:	bf00      	nop

00010934 <construct_list_aggregate>:
construct_list_aggregate():
   10934:	b580      	push	{r7, lr}
   10936:	b084      	sub	sp, #16
   10938:	af00      	add	r7, sp, #0
   1093a:	6078      	str	r0, [r7, #4]
   1093c:	2018      	movs	r0, #24
   1093e:	f7ff ed68 	blx	10410 <malloc@plt>
   10942:	4603      	mov	r3, r0
   10944:	60fb      	str	r3, [r7, #12]
   10946:	2218      	movs	r2, #24
   10948:	2100      	movs	r1, #0
   1094a:	68f8      	ldr	r0, [r7, #12]
   1094c:	f7ff ed72 	blx	10434 <memset@plt>
   10950:	6879      	ldr	r1, [r7, #4]
   10952:	68f8      	ldr	r0, [r7, #12]
   10954:	f7ff ffb6 	bl	108c4 <list_aggregate_init>
   10958:	68fb      	ldr	r3, [r7, #12]
   1095a:	4618      	mov	r0, r3
   1095c:	3710      	adds	r7, #16
   1095e:	46bd      	mov	sp, r7
   10960:	bd80      	pop	{r7, pc}
   10962:	bf00      	nop

00010964 <destruct_list_aggregate>:
destruct_list_aggregate():
   10964:	b580      	push	{r7, lr}
   10966:	b082      	sub	sp, #8
   10968:	af00      	add	r7, sp, #0
   1096a:	6078      	str	r0, [r7, #4]
   1096c:	6878      	ldr	r0, [r7, #4]
   1096e:	f7ff ed44 	blx	103f8 <free@plt>
   10972:	bf00      	nop
   10974:	3708      	adds	r7, #8
   10976:	46bd      	mov	sp, r7
   10978:	bd80      	pop	{r7, pc}
   1097a:	bf00      	nop

0001097c <first_ov>:
first_ov():
   1097c:	b480      	push	{r7}
   1097e:	b085      	sub	sp, #20
   10980:	af00      	add	r7, sp, #0
   10982:	6078      	str	r0, [r7, #4]
   10984:	687b      	ldr	r3, [r7, #4]
   10986:	60fb      	str	r3, [r7, #12]
   10988:	68fb      	ldr	r3, [r7, #12]
   1098a:	2200      	movs	r2, #0
   1098c:	619a      	str	r2, [r3, #24]
   1098e:	bf00      	nop
   10990:	3714      	adds	r7, #20
   10992:	46bd      	mov	sp, r7
   10994:	f85d 7b04 	ldr.w	r7, [sp], #4
   10998:	4770      	bx	lr
   1099a:	bf00      	nop

0001099c <next_ov>:
next_ov():
   1099c:	b480      	push	{r7}
   1099e:	b085      	sub	sp, #20
   109a0:	af00      	add	r7, sp, #0
   109a2:	6078      	str	r0, [r7, #4]
   109a4:	687b      	ldr	r3, [r7, #4]
   109a6:	60fb      	str	r3, [r7, #12]
   109a8:	68fb      	ldr	r3, [r7, #12]
   109aa:	699b      	ldr	r3, [r3, #24]
   109ac:	1c5a      	adds	r2, r3, #1
   109ae:	68fb      	ldr	r3, [r7, #12]
   109b0:	619a      	str	r2, [r3, #24]
   109b2:	bf00      	nop
   109b4:	3714      	adds	r7, #20
   109b6:	46bd      	mov	sp, r7
   109b8:	f85d 7b04 	ldr.w	r7, [sp], #4
   109bc:	4770      	bx	lr
   109be:	bf00      	nop

000109c0 <is_done_ov>:
is_done_ov():
   109c0:	b480      	push	{r7}
   109c2:	b085      	sub	sp, #20
   109c4:	af00      	add	r7, sp, #0
   109c6:	6078      	str	r0, [r7, #4]
   109c8:	687b      	ldr	r3, [r7, #4]
   109ca:	60fb      	str	r3, [r7, #12]
   109cc:	68fb      	ldr	r3, [r7, #12]
   109ce:	699a      	ldr	r2, [r3, #24]
   109d0:	68fb      	ldr	r3, [r7, #12]
   109d2:	695b      	ldr	r3, [r3, #20]
   109d4:	68db      	ldr	r3, [r3, #12]
   109d6:	429a      	cmp	r2, r3
   109d8:	d101      	bne.n	109de <is_done_ov+0x1e>
   109da:	2301      	movs	r3, #1
   109dc:	e000      	b.n	109e0 <is_done_ov+0x20>
   109de:	2300      	movs	r3, #0
   109e0:	4618      	mov	r0, r3
   109e2:	3714      	adds	r7, #20
   109e4:	46bd      	mov	sp, r7
   109e6:	f85d 7b04 	ldr.w	r7, [sp], #4
   109ea:	4770      	bx	lr

000109ec <current_item_ov>:
current_item_ov():
   109ec:	b580      	push	{r7, lr}
   109ee:	b084      	sub	sp, #16
   109f0:	af00      	add	r7, sp, #0
   109f2:	6078      	str	r0, [r7, #4]
   109f4:	687b      	ldr	r3, [r7, #4]
   109f6:	60fb      	str	r3, [r7, #12]
   109f8:	68fb      	ldr	r3, [r7, #12]
   109fa:	695b      	ldr	r3, [r3, #20]
   109fc:	691b      	ldr	r3, [r3, #16]
   109fe:	68fa      	ldr	r2, [r7, #12]
   10a00:	6950      	ldr	r0, [r2, #20]
   10a02:	68fa      	ldr	r2, [r7, #12]
   10a04:	6992      	ldr	r2, [r2, #24]
   10a06:	4611      	mov	r1, r2
   10a08:	4798      	blx	r3
   10a0a:	4603      	mov	r3, r0
   10a0c:	4618      	mov	r0, r3
   10a0e:	3710      	adds	r7, #16
   10a10:	46bd      	mov	sp, r7
   10a12:	bd80      	pop	{r7, pc}

00010a14 <list_iterator_init>:
list_iterator_init():
   10a14:	b580      	push	{r7, lr}
   10a16:	b082      	sub	sp, #8
   10a18:	af00      	add	r7, sp, #0
   10a1a:	6078      	str	r0, [r7, #4]
   10a1c:	6039      	str	r1, [r7, #0]
   10a1e:	687b      	ldr	r3, [r7, #4]
   10a20:	4618      	mov	r0, r3
   10a22:	f7ff feed 	bl	10800 <iterator_init>
   10a26:	687a      	ldr	r2, [r7, #4]
   10a28:	f640 43c8 	movw	r3, #3272	; 0xcc8
   10a2c:	f2c0 0301 	movt	r3, #1
   10a30:	6013      	str	r3, [r2, #0]
   10a32:	687a      	ldr	r2, [r7, #4]
   10a34:	f640 139d 	movw	r3, #2461	; 0x99d
   10a38:	f2c0 0301 	movt	r3, #1
   10a3c:	6213      	str	r3, [r2, #32]
   10a3e:	687a      	ldr	r2, [r7, #4]
   10a40:	f640 137d 	movw	r3, #2429	; 0x97d
   10a44:	f2c0 0301 	movt	r3, #1
   10a48:	61d3      	str	r3, [r2, #28]
   10a4a:	687a      	ldr	r2, [r7, #4]
   10a4c:	f640 13c1 	movw	r3, #2497	; 0x9c1
   10a50:	f2c0 0301 	movt	r3, #1
   10a54:	6253      	str	r3, [r2, #36]	; 0x24
   10a56:	687a      	ldr	r2, [r7, #4]
   10a58:	f640 13ed 	movw	r3, #2541	; 0x9ed
   10a5c:	f2c0 0301 	movt	r3, #1
   10a60:	6293      	str	r3, [r2, #40]	; 0x28
   10a62:	687b      	ldr	r3, [r7, #4]
   10a64:	683a      	ldr	r2, [r7, #0]
   10a66:	615a      	str	r2, [r3, #20]
   10a68:	bf00      	nop
   10a6a:	3708      	adds	r7, #8
   10a6c:	46bd      	mov	sp, r7
   10a6e:	bd80      	pop	{r7, pc}

00010a70 <construct_list_iterator>:
construct_list_iterator():
   10a70:	b580      	push	{r7, lr}
   10a72:	b084      	sub	sp, #16
   10a74:	af00      	add	r7, sp, #0
   10a76:	6078      	str	r0, [r7, #4]
   10a78:	202c      	movs	r0, #44	; 0x2c
   10a7a:	f7ff ecca 	blx	10410 <malloc@plt>
   10a7e:	4603      	mov	r3, r0
   10a80:	60fb      	str	r3, [r7, #12]
   10a82:	222c      	movs	r2, #44	; 0x2c
   10a84:	2100      	movs	r1, #0
   10a86:	68f8      	ldr	r0, [r7, #12]
   10a88:	f7ff ecd4 	blx	10434 <memset@plt>
   10a8c:	6879      	ldr	r1, [r7, #4]
   10a8e:	68f8      	ldr	r0, [r7, #12]
   10a90:	f7ff ffc0 	bl	10a14 <list_iterator_init>
   10a94:	68fb      	ldr	r3, [r7, #12]
   10a96:	4618      	mov	r0, r3
   10a98:	3710      	adds	r7, #16
   10a9a:	46bd      	mov	sp, r7
   10a9c:	bd80      	pop	{r7, pc}
   10a9e:	bf00      	nop

00010aa0 <destruct_list_iterator>:
destruct_list_iterator():
   10aa0:	b580      	push	{r7, lr}
   10aa2:	b082      	sub	sp, #8
   10aa4:	af00      	add	r7, sp, #0
   10aa6:	6078      	str	r0, [r7, #4]
   10aa8:	6878      	ldr	r0, [r7, #4]
   10aaa:	f7ff eca6 	blx	103f8 <free@plt>
   10aae:	bf00      	nop
   10ab0:	3708      	adds	r7, #8
   10ab2:	46bd      	mov	sp, r7
   10ab4:	bd80      	pop	{r7, pc}
   10ab6:	bf00      	nop

00010ab8 <__list_add>:
__list_add():
   10ab8:	b480      	push	{r7}
   10aba:	b085      	sub	sp, #20
   10abc:	af00      	add	r7, sp, #0
   10abe:	60f8      	str	r0, [r7, #12]
   10ac0:	60b9      	str	r1, [r7, #8]
   10ac2:	607a      	str	r2, [r7, #4]
   10ac4:	687b      	ldr	r3, [r7, #4]
   10ac6:	68fa      	ldr	r2, [r7, #12]
   10ac8:	605a      	str	r2, [r3, #4]
   10aca:	68fb      	ldr	r3, [r7, #12]
   10acc:	687a      	ldr	r2, [r7, #4]
   10ace:	601a      	str	r2, [r3, #0]
   10ad0:	68fb      	ldr	r3, [r7, #12]
   10ad2:	68ba      	ldr	r2, [r7, #8]
   10ad4:	605a      	str	r2, [r3, #4]
   10ad6:	68bb      	ldr	r3, [r7, #8]
   10ad8:	68fa      	ldr	r2, [r7, #12]
   10ada:	601a      	str	r2, [r3, #0]
   10adc:	bf00      	nop
   10ade:	3714      	adds	r7, #20
   10ae0:	46bd      	mov	sp, r7
   10ae2:	f85d 7b04 	ldr.w	r7, [sp], #4
   10ae6:	4770      	bx	lr

00010ae8 <list_add>:
list_add():
   10ae8:	b580      	push	{r7, lr}
   10aea:	b082      	sub	sp, #8
   10aec:	af00      	add	r7, sp, #0
   10aee:	6078      	str	r0, [r7, #4]
   10af0:	6039      	str	r1, [r7, #0]
   10af2:	683b      	ldr	r3, [r7, #0]
   10af4:	681b      	ldr	r3, [r3, #0]
   10af6:	461a      	mov	r2, r3
   10af8:	6839      	ldr	r1, [r7, #0]
   10afa:	6878      	ldr	r0, [r7, #4]
   10afc:	f7ff ffdc 	bl	10ab8 <__list_add>
   10b00:	bf00      	nop
   10b02:	3708      	adds	r7, #8
   10b04:	46bd      	mov	sp, r7
   10b06:	bd80      	pop	{r7, pc}

00010b08 <main>:
main():
   10b08:	b5b0      	push	{r4, r5, r7, lr}
   10b0a:	b098      	sub	sp, #96	; 0x60
   10b0c:	af00      	add	r7, sp, #0
   10b0e:	f241 0338 	movw	r3, #4152	; 0x1038
   10b12:	f2c0 0302 	movt	r3, #2
   10b16:	681b      	ldr	r3, [r3, #0]
   10b18:	65fb      	str	r3, [r7, #92]	; 0x5c
   10b1a:	f640 531c 	movw	r3, #3356	; 0xd1c
   10b1e:	f2c0 0301 	movt	r3, #1
   10b22:	f107 0418 	add.w	r4, r7, #24
   10b26:	461d      	mov	r5, r3
   10b28:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   10b2a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   10b2c:	682b      	ldr	r3, [r5, #0]
   10b2e:	6023      	str	r3, [r4, #0]
   10b30:	f107 0318 	add.w	r3, r7, #24
   10b34:	2104      	movs	r1, #4
   10b36:	4618      	mov	r0, r3
   10b38:	f7ff fd66 	bl	10608 <construct_array_aggregate>
   10b3c:	6078      	str	r0, [r7, #4]
   10b3e:	687b      	ldr	r3, [r7, #4]
   10b40:	695b      	ldr	r3, [r3, #20]
   10b42:	6878      	ldr	r0, [r7, #4]
   10b44:	4798      	blx	r3
   10b46:	60b8      	str	r0, [r7, #8]
   10b48:	68bb      	ldr	r3, [r7, #8]
   10b4a:	685b      	ldr	r3, [r3, #4]
   10b4c:	68b8      	ldr	r0, [r7, #8]
   10b4e:	4798      	blx	r3
   10b50:	e00f      	b.n	10b72 <main+0x6a>
   10b52:	68bb      	ldr	r3, [r7, #8]
   10b54:	691b      	ldr	r3, [r3, #16]
   10b56:	68b8      	ldr	r0, [r7, #8]
   10b58:	4798      	blx	r3
   10b5a:	4603      	mov	r3, r0
   10b5c:	4619      	mov	r1, r3
   10b5e:	f640 40d8 	movw	r0, #3288	; 0xcd8
   10b62:	f2c0 0001 	movt	r0, #1
   10b66:	f7ff ec42 	blx	103ec <printf@plt>
   10b6a:	68bb      	ldr	r3, [r7, #8]
   10b6c:	689b      	ldr	r3, [r3, #8]
   10b6e:	68b8      	ldr	r0, [r7, #8]
   10b70:	4798      	blx	r3
   10b72:	68bb      	ldr	r3, [r7, #8]
   10b74:	68db      	ldr	r3, [r3, #12]
   10b76:	68b8      	ldr	r0, [r7, #8]
   10b78:	4798      	blx	r3
   10b7a:	4603      	mov	r3, r0
   10b7c:	f083 0301 	eor.w	r3, r3, #1
   10b80:	b2db      	uxtb	r3, r3
   10b82:	2b00      	cmp	r3, #0
   10b84:	d1e5      	bne.n	10b52 <main+0x4a>
   10b86:	f107 0310 	add.w	r3, r7, #16
   10b8a:	613b      	str	r3, [r7, #16]
   10b8c:	f107 0310 	add.w	r3, r7, #16
   10b90:	617b      	str	r3, [r7, #20]
   10b92:	f107 032c 	add.w	r3, r7, #44	; 0x2c
   10b96:	2230      	movs	r2, #48	; 0x30
   10b98:	2100      	movs	r1, #0
   10b9a:	4618      	mov	r0, r3
   10b9c:	f7ff ec4a 	blx	10434 <memset@plt>
   10ba0:	69bb      	ldr	r3, [r7, #24]
   10ba2:	637b      	str	r3, [r7, #52]	; 0x34
   10ba4:	69fb      	ldr	r3, [r7, #28]
   10ba6:	643b      	str	r3, [r7, #64]	; 0x40
   10ba8:	6a3b      	ldr	r3, [r7, #32]
   10baa:	64fb      	str	r3, [r7, #76]	; 0x4c
   10bac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   10bae:	65bb      	str	r3, [r7, #88]	; 0x58
   10bb0:	2300      	movs	r3, #0
   10bb2:	603b      	str	r3, [r7, #0]
   10bb4:	e00f      	b.n	10bd6 <main+0xce>
   10bb6:	f107 022c 	add.w	r2, r7, #44	; 0x2c
   10bba:	683b      	ldr	r3, [r7, #0]
   10bbc:	210c      	movs	r1, #12
   10bbe:	fb01 f303 	mul.w	r3, r1, r3
   10bc2:	4413      	add	r3, r2
   10bc4:	f107 0210 	add.w	r2, r7, #16
   10bc8:	4611      	mov	r1, r2
   10bca:	4618      	mov	r0, r3
   10bcc:	f7ff ff8c 	bl	10ae8 <list_add>
   10bd0:	683b      	ldr	r3, [r7, #0]
   10bd2:	3301      	adds	r3, #1
   10bd4:	603b      	str	r3, [r7, #0]
   10bd6:	683b      	ldr	r3, [r7, #0]
   10bd8:	2b03      	cmp	r3, #3
   10bda:	d9ec      	bls.n	10bb6 <main+0xae>
   10bdc:	f107 0310 	add.w	r3, r7, #16
   10be0:	4618      	mov	r0, r3
   10be2:	f7ff fea7 	bl	10934 <construct_list_aggregate>
   10be6:	60f8      	str	r0, [r7, #12]
   10be8:	68fb      	ldr	r3, [r7, #12]
   10bea:	695b      	ldr	r3, [r3, #20]
   10bec:	68f8      	ldr	r0, [r7, #12]
   10bee:	4798      	blx	r3
   10bf0:	60b8      	str	r0, [r7, #8]
   10bf2:	68bb      	ldr	r3, [r7, #8]
   10bf4:	685b      	ldr	r3, [r3, #4]
   10bf6:	68b8      	ldr	r0, [r7, #8]
   10bf8:	4798      	blx	r3
   10bfa:	e00f      	b.n	10c1c <main+0x114>
   10bfc:	68bb      	ldr	r3, [r7, #8]
   10bfe:	691b      	ldr	r3, [r3, #16]
   10c00:	68b8      	ldr	r0, [r7, #8]
   10c02:	4798      	blx	r3
   10c04:	4603      	mov	r3, r0
   10c06:	4619      	mov	r1, r3
   10c08:	f640 40ec 	movw	r0, #3308	; 0xcec
   10c0c:	f2c0 0001 	movt	r0, #1
   10c10:	f7ff ebec 	blx	103ec <printf@plt>
   10c14:	68bb      	ldr	r3, [r7, #8]
   10c16:	689b      	ldr	r3, [r3, #8]
   10c18:	68b8      	ldr	r0, [r7, #8]
   10c1a:	4798      	blx	r3
   10c1c:	68bb      	ldr	r3, [r7, #8]
   10c1e:	68db      	ldr	r3, [r3, #12]
   10c20:	68b8      	ldr	r0, [r7, #8]
   10c22:	4798      	blx	r3
   10c24:	4603      	mov	r3, r0
   10c26:	f083 0301 	eor.w	r3, r3, #1
   10c2a:	b2db      	uxtb	r3, r3
   10c2c:	2b00      	cmp	r3, #0
   10c2e:	d1e5      	bne.n	10bfc <main+0xf4>
   10c30:	2300      	movs	r3, #0
   10c32:	4618      	mov	r0, r3
   10c34:	f241 0338 	movw	r3, #4152	; 0x1038
   10c38:	f2c0 0302 	movt	r3, #2
   10c3c:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
   10c3e:	681b      	ldr	r3, [r3, #0]
   10c40:	429a      	cmp	r2, r3
   10c42:	d001      	beq.n	10c48 <main+0x140>
   10c44:	f7ff ebde 	blx	10404 <__stack_chk_fail@plt>
   10c48:	3760      	adds	r7, #96	; 0x60
   10c4a:	46bd      	mov	sp, r7
   10c4c:	bdb0      	pop	{r4, r5, r7, pc}
   10c4e:	bf00      	nop

00010c50 <__libc_csu_init>:
__libc_csu_init():
   10c50:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   10c54:	4607      	mov	r7, r0
   10c56:	4e0b      	ldr	r6, [pc, #44]	; (10c84 <__libc_csu_init+0x34>)
   10c58:	4688      	mov	r8, r1
   10c5a:	4d0b      	ldr	r5, [pc, #44]	; (10c88 <__libc_csu_init+0x38>)
   10c5c:	4691      	mov	r9, r2
   10c5e:	447e      	add	r6, pc
   10c60:	f7ff ebb4 	blx	103cc <_init>
   10c64:	447d      	add	r5, pc
   10c66:	1b76      	subs	r6, r6, r5
   10c68:	10b6      	asrs	r6, r6, #2
   10c6a:	d009      	beq.n	10c80 <__libc_csu_init+0x30>
   10c6c:	2400      	movs	r4, #0
   10c6e:	3401      	adds	r4, #1
   10c70:	f855 3b04 	ldr.w	r3, [r5], #4
   10c74:	464a      	mov	r2, r9
   10c76:	4641      	mov	r1, r8
   10c78:	4638      	mov	r0, r7
   10c7a:	4798      	blx	r3
   10c7c:	42b4      	cmp	r4, r6
   10c7e:	d1f6      	bne.n	10c6e <__libc_csu_init+0x1e>
   10c80:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   10c84:	000102a6 	.word	0x000102a6
   10c88:	0001029c 	.word	0x0001029c

00010c8c <__libc_csu_fini>:
__libc_csu_fini():
   10c8c:	4770      	bx	lr
   10c8e:	bf00      	nop

Disassembly of section .fini:

00010c90 <_fini>:
_fini():
   10c90:	e92d4008 	push	{r3, lr}
   10c94:	e8bd8008 	pop	{r3, pc}
